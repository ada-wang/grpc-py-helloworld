# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import simple_test_pb2 as simple__test__pb2


class SimpleTestStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetOne = channel.unary_unary(
        '/simpletest.SimpleTest/GetOne',
        request_serializer=simple__test__pb2.RequestOne.SerializeToString,
        response_deserializer=simple__test__pb2.ResponseOne.FromString,
        )
    self.GetList = channel.unary_stream(
        '/simpletest.SimpleTest/GetList',
        request_serializer=simple__test__pb2.RequestOne.SerializeToString,
        response_deserializer=simple__test__pb2.ResponseList.FromString,
        )
    self.PostList = channel.stream_unary(
        '/simpletest.SimpleTest/PostList',
        request_serializer=simple__test__pb2.RequestList.SerializeToString,
        response_deserializer=simple__test__pb2.ResponseOne.FromString,
        )
    self.PostAndPost = channel.stream_stream(
        '/simpletest.SimpleTest/PostAndPost',
        request_serializer=simple__test__pb2.RequestList.SerializeToString,
        response_deserializer=simple__test__pb2.ResponseList.FromString,
        )


class SimpleTestServicer(object):

  def GetOne(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetList(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PostList(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PostAndPost(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimpleTestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetOne': grpc.unary_unary_rpc_method_handler(
          servicer.GetOne,
          request_deserializer=simple__test__pb2.RequestOne.FromString,
          response_serializer=simple__test__pb2.ResponseOne.SerializeToString,
      ),
      'GetList': grpc.unary_stream_rpc_method_handler(
          servicer.GetList,
          request_deserializer=simple__test__pb2.RequestOne.FromString,
          response_serializer=simple__test__pb2.ResponseList.SerializeToString,
      ),
      'PostList': grpc.stream_unary_rpc_method_handler(
          servicer.PostList,
          request_deserializer=simple__test__pb2.RequestList.FromString,
          response_serializer=simple__test__pb2.ResponseOne.SerializeToString,
      ),
      'PostAndPost': grpc.stream_stream_rpc_method_handler(
          servicer.PostAndPost,
          request_deserializer=simple__test__pb2.RequestList.FromString,
          response_serializer=simple__test__pb2.ResponseList.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'simpletest.SimpleTest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
